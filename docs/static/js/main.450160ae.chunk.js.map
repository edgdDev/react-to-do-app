{"version":3,"sources":["reducer.js","Hooks/use-actions.js","Components/CreateItem.js","Components/ListItem.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","items","iterator","redurer","state","action","type","value","CreateItem","handleInput","saveItem","inputValue","className","placeholder","onChange","target","onKeyDown","key","length","onClick","ListItem","removeItem","completeItem","map","e","status","disabled","itemId","id","isChecked","checked","task","App","useState","setValue","useReducer","reducer","dispatch","onSaveItem","payload","alert","values","onRemoveItem","newItems","filter","onCompleteItem","tidyItem","sort","a","b","useActions","actions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.450160ae.chunk.js","sourcesContent":["export const initialState = {\n  items: [],\n  iterator: 0\n};\n\nexport default function redurer(state, action) {\n  switch (action.type) {\n    case \"SAVE_ITEM\":\n      return { ...state, items: [...state.items, action.value], iterator: state.iterator + 1 };\n\n    case 'REMOVE_ITEM':\n      return { ...state, items: action.value };\n\n    case 'COMPLETE_ITEM':\n      return { ...state, items: action.value };\n      \n    default: {\n      return state;\n    }\n  }\n}\n","import { useReducer, useState } from 'react';\nimport reducer, { initialState } from \"../reducer\";\n\nexport const useActions = () => {\n\n    //Hooks\n    const [inputValue, setValue] = useState('');\n    const [state, dispatch] = useReducer(reducer, initialState);\n\n    //Function to catch value from Input\n    const handleInput = (values) => setValue(values);\n\n    //Function to saveItem\n    const onSaveItem = () => {\n\n        if (!inputValue.length) {\n            alert(\"Before to add new task, must you're sure what the field is not empty\");\n            return;\n        }\n\n        const payload = {\n            status: 'active',\n            task: inputValue,\n            id: state.iterator + 1\n        };\n        dispatch({\n            type: 'SAVE_ITEM',\n            value: payload\n        });\n        setValue('');\n    }\n\n    //Function to removeItem\n    const onRemoveItem = (itemId) => {\n        const newItems = state.items.filter(e => e.id !== itemId);\n        dispatch({\n            type: 'REMOVE_ITEM',\n            value: newItems\n        });\n    }\n\n    //Function to set complete item\n    const onCompleteItem = ({ itemId, isChecked }) => {\n        if (isChecked) {\n            const newItems = state.items.map(e => {\n                if (e.id === itemId) {\n                    e.status = 'completed';\n                    return e;\n                }\n                else {\n                    return e;\n                }\n            });\n            const tidyItem = newItems.sort((a, b) => {\n                if (a.status === 'active' || b.status === 'completed') {\n                    return -1\n                }\n                else {\n                    return 1\n                }\n            });\n            dispatch({\n                type: 'COMPLETE_ITEM',\n                value: tidyItem\n            });\n        }\n    }\n\n    return [{ inputValue, state }, { onSaveItem, handleInput, onRemoveItem, onCompleteItem }];\n\n}","import React from 'react';\n\nexport const CreateItem = ({ handleInput, saveItem, inputValue }) => {\n\n    return (\n        <div className='container-create-item'>\n            <input\n                placeholder='Add task...'\n                type='text'\n                value={inputValue}\n                onChange={({ target }) => handleInput(target.value)}\n                onKeyDown={({ key }) => key === 'Enter' && inputValue.length && saveItem()}\n            />\n            <button\n                onClick={saveItem}\n            >\n                + Add\n            </button>\n\n        </div>\n\n    )\n}","import React from 'react';\n\nexport const ListItem = ({ items, removeItem, completeItem }) => {\n\n    return(\n        <div className='container-list-item'>\n        { items.length !== 0 && items.map(e => (\n            <div key={e.id} className={`content-list-item ${e.status === 'completed' && 'task-completed'}`} >\n                <div className=''>\n                    <input \n                        type='checkbox'\n                        disabled={ e.status === 'completed' && true }\n                        onChange={({ target }) => completeItem({ itemId: e.id, isChecked: target.checked })} \n                    /> \n                    <label className=''> {e.task} </label> \n                </div>\n                <div>\n                    <button\n                        onClick={() => removeItem(e.id)}\n                    >\n                        <i className=\"fa-solid fa-trash-can\"></i>\n                        {' Delete'}\n                    </button>\n                </div>\n            </div>\n        )) }\n\n    </div>\n    )\n}","import { useActions } from \"./Hooks/use-actions\";\nimport { CreateItem } from \"./Components/CreateItem\";\nimport { ListItem } from \"./Components/ListItem\";\nimport './styles/style.css';\n\nfunction App() {\n  const [{ inputValue, state }, actions] = useActions();\n\n  return (\n    <div className=\"App\">\n      <main className=\"main\">\n        <h3> What do You have to do today? üìù </h3>\n        <CreateItem handleInput={actions.handleInput} saveItem={actions.onSaveItem} inputValue={inputValue} />\n        <ListItem items={state.items} removeItem={actions.onRemoveItem} completeItem={actions.onCompleteItem} />\n      </main>\n      <footer className=\"footer\">\n        <h6>{'Made by <Elvin D. Guzm√°n />'}</h6>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}